[project]
name = "asynccachedview"
version = "0.0.1"
authors = [
  { name="Alexander Sosedkin", email="monk@unboiled.info" },
]
description = "Make asynchronous requests, online and offline"
urls.homepage = "https://github.com/t184256/asynccachedview"
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)"
]
requires-python = ">=3.11"
dependencies = [] # TODO: list python dependencies
optional-dependencies.test = [
    "pytest", "coverage", "pytest-cov", "mypy", "pytest-mypy",
    "pylama", "pyflakes", "pycodestyle", "pydocstyle", "mccabe",
    "pylint", "eradicate",
    "pylint-asyncio", "aiohttp", "aioresponses",
]

[tool.pytest.ini_options]
# TODO: reenable mypy and coverade
#addopts = "--mypy --pylama --cov --cov-report term-missing --doctest-modules"
addopts = "--pylama --doctest-modules"

[tool.pylama]
linters = "pylint,pyflakes,pycodestyle,pydocstyle,mccabe,eradicate"

[tool.pylama.linter.pydocstyle]
ignore = "D212,D203,D105,D413,D407"

[tool.coverage]
run.source = ["asynccachedview"]
run.branch = true
report.exclude_lines = [ "if __name__ == .__main__.:" ]
report.fail_under = 100

[tool.mypy]
strict = true

[tool.pylint."BASIC"]
min-public-methods = 0
variable-naming-style = "any"  # relax C0103 invalid-name, rejecting `p0`
argument-naming-style = "any"  # relax C0102 invalid-name, rejecting `x`

[tool.pylint."MESSAGES CONTROL"]
disable = [
]
