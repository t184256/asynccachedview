[project]
name = "asynccachedview"
version = "0.0.1"
authors = [
  { name="Alexander Sosedkin", email="monk@unboiled.info" },
]
description = "Make asynchronous requests, online and offline"
urls.homepage = "https://github.com/t184256/asynccachedview"
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)"
]
requires-python = ">=3.11"
dependencies = [
    "aiosqlite",
    "aiohttp",
    "aiosqlitemydataclass@git+https://github.com/t184256/aiosqlitemydataclass#egg=52c4eef1d91ec29da88177b44f911754ba4023dd",
    "awaitable-property@git+https://github.com/t184256/awaitable-property#egg=0ff23b99d40b49bc3550047066eb399fd21d3483",
] # TODO: list python dependencies
optional-dependencies.test = [
    "asyncio-loop-local@git+https://github.com/t184256/asyncio-loop-local#egg=81e1143017773348383e584dd618e3f2c33b95ab",
    "pytest",
    "coverage", "pytest-cov",
    "mypy", "pytest-mypy",
    "ruff",
    "pytest-asyncio",
    "aioresponses",
    "asyncio-loop-local>=0.0.3",
]

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.pytest.ini_options]
addopts = "--mypy --cov --cov-report term-missing --doctest-modules"

[tool.coverage]
run.source = [ "asynccachedview" ]
run.branch = true
report.exclude_lines = [
  "# pragma: no cover",
  "if __name__ == .__main__.:",
  "if typing.TYPE_CHECKING:",
  "...  # protocol",
]
report.fail_under = 100

[tool.mypy]
strict = true
new_type_inference = true

[tool.ruff]
line-length = 79
select = [ "ALL" ]
ignore = [
  "ANN101",  # missing-type-self
  "ANN102",  # missing-type-cls
  "D105",  # undocumented-magic-method
  "D203",  # one-blank-line-before-class
  "D213",  # multi-line-summary-second-line
  "FIX002",  # line-contains-todo
  "FIX004",  # line-contains-hack
  "S101",  # assert
  "TD002",  # missing-todo-author
  "TD003",  # missing-todo-link
]
per-file-ignores."tests/**" = [
  "INP001",  # implicit-namespace-package
  "S101",  # assert
  "SLF001",  # private-member-access
]
flake8-quotes.inline-quotes = "single"
flake8-quotes.multiline-quotes = "single"
flake8-copyright.notice-rgx = '# SPDX-FileCopyrightText: 2023 Alexander Sosedkin <monk@unboiled.info>\n# SPDX-License-Identifier: GPL-3.0\n'
preview = true

[tool.ruff.format]
quote-style = "single"
preview = true
